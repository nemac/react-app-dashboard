{"version":3,"sources":["card.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","card","maxWidth","margin","transition","boxShadow","media","paddingTop","content","textAlign","padding","spacing","unit","SimpleCard","name","image","href","linkText","alt","profession","about","classes","Card","className","CardMedia","CardContent","Typography","align","App","useState","data","setData","useEffect","fetch","headers","then","response","console","log","json","myJson","length","map","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,OAAQ,OACRC,WAAY,OACZC,UAAW,mCACX,UAAW,CACTA,UAAW,0CAGfC,MAAO,CACLC,WAAY,UAEdC,QAAS,CACPC,UAAW,OACXC,QAA8B,EAArBV,EAAMW,QAAQC,UA+BZC,MA3Bf,YAA8E,IAAxDC,EAAuD,EAAvDA,KAAsBC,GAAiC,EAAjDC,KAAiD,EAA3CC,SAA2C,EAAjCF,OAAOG,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,WAAYC,EAAS,EAATA,MAC5DC,EAAUvB,IAEhB,OACE,eAACwB,EAAA,EAAD,CAAMC,UAAWF,EAAQpB,KAAzB,UACE,cAACuB,EAAA,EAAD,CACED,UAAWF,EAAQf,MACnBS,MAAOA,EACPG,IAAKA,IAEP,cAACO,EAAA,EAAD,CAAaF,UAAWF,EAAQb,QAAhC,SACE,eAACkB,EAAA,EAAD,CAAYC,MAAM,SAAlB,UACE,6BACGb,IAEH,6BACGK,IAEH,4BACGC,a,MCCEQ,MA1Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAuBA,OAHAC,qBAAU,WAjBRC,MAAM,YACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIXC,MAAK,SAASC,GAEb,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAASK,GACbH,QAAQC,IAAIE,GACZT,EAAQS,QAKZ,IAEA,qBAAKjB,UAAU,MAAf,SAEIO,GAAQA,EAAKW,OAAO,GACpBX,EAAKY,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACE5B,MAAO4B,EAAK5B,MACZD,KAAM6B,EAAK7B,KACXK,WAAYwB,EAAKxB,WACjBC,MAAOuB,EAAKvB,MACZF,IAAKyB,EAAK7B,aC1BP8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3901f99.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: 300,\n    margin: \"auto\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\"\n    }\n  },\n  media: {\n    paddingTop: \"70.25%\"\n  },\n  content: {\n    textAlign: \"left\",\n    padding: theme.spacing.unit * 2\n  },\n}));\n\nfunction SimpleCard({ name, href, linkText, image, alt, profession, about }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={image}\n        alt={alt}\n      />\n      <CardContent className={classes.content}>\n        <Typography align=\"center\">\n          <h3>\n            {name}\n          </h3>\n          <h5>\n            {profession}\n          </h5>\n          <p>\n            {about}\n          </p>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default SimpleCard;","import React,{useState,useEffect} from 'react';\nimport Card from './card'\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const getData=()=>{\n    fetch('data.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    )\n      .then(function(response){\n        console.log(response)\n        return response.json();\n      })\n      .then(function(myJson) {\n        console.log(myJson);\n        setData(myJson)\n      });\n  }\n  useEffect(()=>{\n    getData()\n  },[])\n  return (\n    <div className=\"App\">\n      {\n        data && data.length>0 && \n        data.map((item)=>\n          <Card\n            image={item.image}\n            name={item.name}\n            profession={item.profession}\n            about={item.about}\n            alt={item.name}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}